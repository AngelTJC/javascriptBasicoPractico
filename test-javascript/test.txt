Examen de prueba de platzi

1.Responde las siguientes preguntas en la sección de comentarios:

    *¿Que es una variable?
        R-. es un espacio reservado en la memoria del computador
            para almacenar datos.
            tiene tres caracteristicas principales:
                -nombre: que se utiliza para buscar la variable en
                         el codigo.
                -tipo de dato: es para decirle que tipo de valor puede
                               almecenar en la variable.
                -valor: es dato almacenado en la variable.
        ¿Porque se llaman variables?
            porque pueden cambiar su valor durante la ejecucion del programa,
            eso depende de las operaciones que se realicen con ella.

    *¿Cual es la diferencia entre declarar e inicializar una variable?
        R.- La diferencia esta en que declarar una variable es solo ponerle
            el nombre sin ningun valor esta vacia.
            Mientras que inicializar una variable es poner algun valor.
    
    *¿Cual es la diferencia entre sumar numeros y concatenar?
        R.- La diferencia entre sumar y concatenar numeros es:
            sumar es realizar una operacion matematica de adicio entre numeros,
            y concatenar es unir dos o mas tipos de datos string, dos o mas
            letras o palabras podrian ser para que sean una sola palabra.

    *¿Cuál operador me permite sumar o concatenar?
        R.- El operador que me permite sumar o concatenar es el operador de
            adición "+".

2.Determina el nombre y tipo de dato para almacenar en variables la siguiente información:

    -Nombre -->let nombre (string)
    -Apellido --> let apellido (string)
    -Nombre de usuario en Platzi --> let nombre_usuario (string)
    -Edad --> let edad (int)
    -Correo electrónico --> let email (string)
    -Mayor de edad --> let mayor-edad (boolean)
    -Dinero ahorrado --> let dinero-ahorrado (float)
    -Deudas --> let deudas (float)
    
3.Traduce a código JavaScript las variables del ejemplo anterior y deja tu código en los comentarios.

    let nombre="Martin";
    let apellido="Castro";
    let edad=25;
    let nombre_usuario="Martincito-castrito";
    let email="martin@gmail.com";
    let mayor_edad=true;
    let dinero_ahorrado=1350,55;
    let deudas=1000,56;

4.Calcula e imprime las siguientes variables a partir de las variables del ejemplo anterior:

    let nombre_completo= nombre +" "+apellido;
    console.log(nombre_completo);

    let dinero_real=dinero_ahorrado - deudas;


        FUNCIONES

1.Responde las siguientes preguntas en la sección de comentarios:

    ¿Qué es una función?
    R.- Es un bloque de codigo que realiza una tarea especifica
        determinada, ademas es una forma de abstraccion ya que oculta
        los detalles de como funciona para que los desarrolladores solo
        la usen llamandola por su nombre, como por ejemplo cuando usamos
        "console.log() es para imprimir en consola" es un bloque de codigo
        que nosotros no sabemos como funciona por dentro (aunque podriamos),
        es una abstraccion que nosotros sabemos para que sirve y ya la
        utilizamos sin importar como es que realiza esa operacion internamente.

    ¿Cuando me sirve una funcion en mi código?
    R.- Nos sirve cuando un proceso ,tarea se repite varias veces,
        en ese caso el proceso o tarea lo convertimos en una funcion
        para ahorar codigo y tiempo.

    ¿Cuál es la diferencia entre parámetros y argumentos de una función?
    R.- la diferencia esta en :
        parametros: son los nombres de la variables que se declaran al momento
                    de crear una funcion. Es una variable local que se utiliza
                    para recibir datos.
        argumentos: son los valores que reciben los parametros al momento de ser
                    invocados.
            Ejemplo:
                function sumar(numero1, numero2){ -->son los parametros
                    return numero1 + numero2;
                }

                let resultado= sumar( 5 , 3 ); -->son los argumentos(valores reales)

2.Convierte el siguiente código en una función, pero, cambiando cuando sea necesario las variables constantes por parámetros y argumentos en una función:

const name = "Juan David";
const lastname = "Castro Gallego";
const completeName = name + lastname;
const nickname = "juandc";

console.log("Mi nombre es " + completeName + ", pero prefiero que me digas " + nickname + ".");

    function presentacion(name, lastname, nickname){
        let completeName=name + " " + lastname;
        console.log(`Mi nombre es ${completeName}, pero prefiero que me digas ${nickname}`);
    }

    presentacion('Luis','Cantuta','Gato');


        CONDICIONALES

1.Responde las siguientes preguntas en la sección de comentarios:

    ¿Qué es un condicional?
        R.- Es una estructura de control que permite a un programa
            tomar decisiones.

    ¿Qué tipos de condicionales existen en JavaScript y cuáles son
    sus diferencias?
        R.-Las condicionales que existen son:
            -if-else-else if --> permite que el programa elija que accion va
                                 a ejecutar en caso de que se cumpla la condicional
                                 que se le proporciono.
            -switch-case --> evalula un parametro o valor lo evalua mediante
                             unos casos en caso de ser verdadero(true) se ejecuta
                             la accion y se rompe(break) la estructura de control.
            La diferencia esta en que if se puede utilizar cuando hay pocas opciones para evaluar en condicionales y cuando las condiciones son complejas, mientras que switch se puede utilizar cuando hay varias opciones de a evaluar y las condiciones son sencillas.

    ¿Puedo combinar funciones y condicionales?
        R.- si se puede.

2.Replica el comportamiento del siguiente código que usa la sentencia switch utilizando if, else y else if:

const tipoDeSuscripcion = "Basic";

switch (tipoDeSuscripcion) {
   case "Free":
       console.log("Solo puedes tomar los cursos gratis");
       break;
   case "Basic":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
       break;
   case "Expert":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un año");
       break;
   case "ExpertPlus":
       console.log("Tú y alguien más pueden tomar TODOS los cursos de Platzi durante un año");
       break;
}


const tipoDeSuscripcion="Basic";
    if(tipoDeSuscripcion === "Free"){
       console.log("Solo puedes tomar los cursos gratis");
    }else if(tipoDeSuscripcion === "Basic"){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
    }else if(tipoDeSuscripcion === "Expert"){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un año");
    }else if(){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un año");
    }else if(tipoDeSuscripcion === "ExpertPlus"){
       console.log("Tú y alguien más pueden tomar TODOS los cursos de Platzi durante un año");
    }

3.Replica el comportamiento de tu condicional anterior con if, else y else if, pero ahora solo con if (sin else ni else if).
    const tipoDeSuscripcion="Basic";
    if(tipoDeSuscripcion === "Free"){
       console.log("Solo puedes tomar los cursos gratis");
    }
    
    if(tipoDeSuscripcion === "Basic"){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
    }
    
    if(tipoDeSuscripcion === "Expert"){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un año");
    }
    
    if(){
       console.log("Puedes tomar casi todos los cursos de Platzi durante un año");
    }
    
    if(tipoDeSuscripcion === "ExpertPlus"){
       console.log("Tú y alguien más pueden tomar TODOS los cursos de Platzi durante un año");
    }

    Bonus: si ya eres una experta o experto en el lenguaje, te desafío a comentar cómo replicar este comportamiento con arrays u objetos y un solo condicional.
    
    const tipoDeSuscripcion="Basic";
    const suscripciones=[
        { suscripcion: "Free", mensaje: "Solo puedes tomar los cursos gratis"},
        {suscripcion: "Basic", mensaje: "Puedes tomar casi todos los cursos de Platzi durante un mes"},
        {suscripcion: "Expert", mensaje: "Puedes tomar casi todos los cursos de Platzi durante un año"},
        {suscripcion: "ExpertPlus", mensaje: "Tú y alguien más pueden tomar TODOS los cursos de Platzi durante un año"}
    ];

    for(let sus of suscripciones){
        if(tipoDeSuscripcion === sus.suscripcion){
            console.log(sus.mensaje);
        }
    }

        CICLOS

1.Responde las siguientes preguntas en la sección de comentarios:
    
    *¿Qué es un ciclo?
        R.- Es una condicion que se repite y se rompe o no hasta que se cumpla
            la condicion determinada.
    *¿Qué tipos de ciclos existen en JavaScript?
        R.- existen los siguientes:
            -for
            -while
            -do while
    *¿Qué es un ciclo infinito y por qué es un problema?
        R.- es un problema porque interfiere con el rendimiento del computador
            , se puede bloquear la pagina web.
    *¿Puedo mezclar ciclos y condicionales?
        R.- si es una muy buena opcion.

2.Replica el comportamiento de los siguientes ciclos for utilizando ciclos while:

for (let i = 0; i < 5; i++) {
    console.log("El valor de i es: " + i);
}

for (let i = 10; i >= 2; i--) {
    console.log("El valor de i es: " + i);
}

let i=0;

    while(i<=2){
        console.log("El valor de i es: " + i);
        i++;
    }

let i=10;
    while(i>=2){
        console.log("El valor de i es: " + i);
        i--;
    }

3.Escribe un código en JavaScript que le pregunte a los usuarios cuánto es 2 + 2. Si responden bien, mostramos un mensaje de felicitaciones, pero si responden mal, volvemos a empezar.

💡 Pista: puedes usar la función prompt de JavaScript.

    let respuesta = Number(prompt("Cuanto es 2 + 2: "));

    if(respuesta === 4){
        alert("felicitaciones");
    }else{
        alert("volvemos a empezar");
    }


        LISTAS

1.Responde las siguientes preguntas en la sección de comentarios:
    *¿Qué es un array?
        R.- es una tipo de dato que nos permite almacenar colecciones de datos
            de todo tipo.
    *¿Qué es un objeto?
        R.-Es un abstraccion de la vida real de objetos, es una coleccion de datos
            con una caracteristicas particular es que los datos se almacenan en
            clave y valor.
    *¿Cuándo es mejor usar objetos o arrays?
        R.- usar arrays cuando los datos no sean tan complejos o no 
        tengan tanta relacion, y usar objetos cuando de tenga datos complejos
        relacionados o quieras almacenarlas con una clave y valor.
    *¿Puedo mezclar arrays con objetos o incluso objetos con arrays?
        R.- si se puede depende del uso que le encuentres

2.Crea una función que pueda recibir cualquier array como parámetro e imprima su primer elemento.
    let almacen=[];
    function array(elemento){
        almacen.push(elemento);
        console.log(almacen[0]);
    }

3.Crea una función que pueda recibir cualquier array como parámetro e imprima todos sus elementos uno por uno (no se vale imprimir el array completo).

let almacen=[];
    function array(elemento){
        almacen.push(elemento);
        for(let elem of almacen){
            console.log(elem);
        }
    }

4.Crea una función que pueda recibir cualquier objeto como parámetro e imprima todos sus elementos uno por uno (no se vale imprimir el objeto completo).

let myArray=[];
let persona1={nombre:"Luis", edad: 28}
let persona2={nombre:"Antonio", edad: 30}

function datos(myArray, persona1, persona2){
    myArray.push(persona1,persona2);
    for(let persona of myArray){
        console.log(persona.nombre +" "+persona.edad);
    }
}

datos(myArray, persona1, persona2);
